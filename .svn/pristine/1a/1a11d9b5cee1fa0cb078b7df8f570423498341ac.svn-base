package com.yado.bos.web.action;

import java.io.IOException;

import org.apache.commons.lang3.StringUtils;
import org.apache.struts2.ServletActionContext;
import org.hibernate.criterion.DetachedCriteria;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;

import com.yado.bos.entity.Staff;
import com.yado.bos.service.IStaffService;
import com.yado.bos.utils.PageBean;

import net.sf.json.JSONObject;
import net.sf.json.JsonConfig;

@Controller
public class StaffAction extends BaseAction<Staff>{

	/**
	 * 取派员管理
	 */
	private static final long serialVersionUID = 1L;
	
	@Autowired
	private IStaffService staffService;

	public String addStaff() {
		staffService.save(model);
		return LIST;
	}
	
	
	private int page;
	private int rows;

	public String pageQuery() {
		PageBean pageBean = new PageBean();
		pageBean.setCurrentPage(page);
		pageBean.setPageSize(rows);
		DetachedCriteria detachedCriteria = DetachedCriteria.forClass(Staff.class);
		pageBean.setDetachedCriteria(detachedCriteria);
		staffService.pageQuery(pageBean);
		//使用json-lib将pageBean对象转为json，通过输出流写会页面中
		//JSONObject将单一对象转化为json
		//JSONArray将数组或集合转化成json
		JsonConfig jsonConfig = new JsonConfig();
		//指定哪些属性不需要转json
		jsonConfig.setExcludes(new String[]{"currentPage","detachedCriteria","pageSize"});
		String json = JSONObject.fromObject(pageBean,jsonConfig).toString();
		ServletActionContext.getResponse().setContentType("text/json;charset=utf-8");
		
		try {
			ServletActionContext.getResponse().getWriter().println(json);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return NONE;
	}
	
	//属性驱动，接收页面传来的ids
	private String ids;
	
	/*
	 * 取派员批量删除
	 */
	public String deleteBanch() {
		
		staffService.deleteBenth(ids);
		 
		return LIST;
	}
	
	/*
	 * 取派员信息更新
	 */
	public String edit() {
		Staff staff = staffService.findById(model.getId());
		//使用页面提交的数据进行覆盖
		 staff.setName(model.getName());
		 staff.setTelephone(model.getTelephone());
		 staff.setDeltag(model.getDeltag());
		 staff.setStandard(model.getStandard());
		 staff.setHaspda(model.getHaspda());
		 staff.setStation(model.getStation());
		 staffService.update(staff);	 
		return LIST;
	}
	
	
	public int getPage() {
		return page;
	}


	public void setPage(int page) {
		this.page = page;
	}


	public int getRows() {
		return rows;
	}


	public void setRows(int rows) {
		this.rows = rows;
	}
	
	public String getIds() {
		return ids;
	}

	public void setIds(String ids) {
		this.ids = ids;
	}
}
